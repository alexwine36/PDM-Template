[project]
name = "pdm-template"
version = "0.2.0"
description = "Template for PDM packages"
authors = []
dependencies = []
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}


[tool.pdm]
distribution = false
plugins = [
    "sync-pre-commit-lock"
]

[tool.pdm.scripts]
install_dev = "pdm install --plugins"
test = "pytest"
coverage = "pytest --cov=src/pdm_template --cov-branch --cov-report xml:coverage.xml tests/"
lint = "ruff check"
fmt = "ruff format"
lint_check = {composite = ["lint", "fmt --check"]}
lint_fix = {composite = ["lint --fix", "fmt"]}
typecheck = "basedpyright"
commit = "pdm run cz commit"


[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
]
lint = [
    "basedpyright>=1.13.2",
    "ruff>=0.5.1",
]
workflow = [
    "pre-commit>=3.7.1",
    "commitizen>=3.27.0",
]
pytest-cov = []

[tool.ruff]
line-length=120

[tool.sync-pre-commit-lock]
# Run `pre-commit install` automatically if applicable
automaticall-install-hooks = true
# Should we sync your pre-commit versions with your lockfile (when running lock, add, update, remove, etc.)?
disable-sync-from-lock = false
# Packages to ignore when syncing from lock
ignore = []
# Name of the pre-commit config file to sync with
pre-commit-config-file = ".pre-commit-config.yaml"

[tool.basedpyright]
include = ["src"]
reportMissingImports = true
reportAttributeAccessIssue = true
reportMissingTypeStubs = false
typeCheckingMode = "basic"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true

[tool.pytest.ini_options]
pythonpath = [
  ".", "src"
]
addopts = "-s"